//
// Variables
// -----------------------------------------

$balloon-bg:                fade-out(#111, .1) !default;
$balloon-font-color:        #fff !default;
$balloon-base-size:         10px !default;
$balloon-arrow-height:      6px !default;
$balloon-border-radius:     4px !default;
$balloon-drop-shadow-color: none !default;
$balloon-drop-shadow:       none !default;
$balloon-padding:           0.5em 1em !default;
$small-screen-max-width:    979px !default;
$scrim-bg:                  fade-out(#000, .5) !default;


//
// Mixins
// -----------------------------------------

@mixin svg-arrow ($color, $position: up) {

    $degrees: 0;
    $height:  $balloon-arrow-height;
    $width:   $balloon-arrow-height * 3;
    $shadow:  none;
    
    @if ($balloon-drop-shadow-color != none) {
        $shadow:  0 2px 1px transparentize($balloon-drop-shadow-color, 0.2);
    }

    @if ($position == down) {
        $degrees: 180 strip-units($width) strip-units($height);
        @if ($balloon-drop-shadow-color != none) {
            $shadow:  0 -2px 1px transparentize($balloon-drop-shadow-color, 0.2);
        }
    } @else if ($position == left) {
        $width: $balloon-arrow-height;
        $height: $balloon-arrow-height * 3;
        $degrees: -90 strip-units($height) strip-units($height);
        @if ($balloon-drop-shadow-color != none) {
            $shadow:  2px 0 1px transparentize($balloon-drop-shadow-color, 0.2);
        }
    } @else if ($position == right) {
        $width: $balloon-arrow-height;
        $height: $balloon-arrow-height * 3;
        $degrees: 90 strip-units($width) strip-units($width);
        @if ($balloon-drop-shadow-color != none) {
            $shadow:  -2px 0 1px transparentize($balloon-drop-shadow-color, 0.2);
        }
    }

    background: no-repeat url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg"><path fill="#{$color}" transform="rotate(#{$degrees})" d="M2.658,0.000 C-13.615,0.000 50.938,0.000 34.662,0.000 C28.662,0.000 23.035,12.002 18.660,12.002 C14.285,12.002 8.594,0.000 2.658,0.000 Z"/></svg>');
    background-size: 100% auto;
    width: $width;
    height: $height;

    @if ($balloon-drop-shadow-color != none) {
        filter: drop-shadow($shadow);
        -webkit-filter: drop-shadow($shadow);
    }
}

@mixin transition ($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin transform ($val) {
  -webkit-transform: $val;
  -moz-transform: $val;
  -ms-transform: $val;
  transform: $val;
}

@mixin transform-origin ($val) {
  -webkit-transform-origin: $val;
  -moz-transform-origin: $val;
  -ms-transform-origin: $val;
  transform-origin: $val;
}

@mixin opacity ($trans) {
  filter: alpha(opactiy=($trans * 100));
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$trans * 100})";
  -moz-opacity: $trans;
  -khtml-opacity: $trans;
  opacity: $trans;
}

@mixin base-effects () {
    @include opacity(0);
    @include transition(all .18s ease-out);
}

@function strip-units($number) {
  @return $number / ($number * 0 + 1);
}


//
// Styles
// -----------------------------------------


[data-balloon] {
    position: relative; // alt. absolute or fixed

	h5 {
		font-size: $balloon-base-size + 5px;
		font-weight: 700;
		margin-bottom: 10px;
	}

	p {
		margin-bottom: 0;
	}

    &[data-balloon-html-content] .balloon,
    &:not([data-balloon-html-content]):before {
        @include base-effects();

        background: $balloon-bg;
        border-radius: $balloon-border-radius;
        color: $balloon-font-color;
        content: attr(data-balloon);
        font-size: $balloon-base-size + 2;
        padding: $balloon-padding;
        position: absolute;
        white-space: nowrap;
        z-index: 10;
        box-shadow: $balloon-drop-shadow;
        pointer-events: none;
    }

    &:after {
        @include svg-arrow($balloon-bg);
        @include base-effects();

        content: '';
        position: absolute;
        z-index: 10;
    }

    &:hover {
        &[data-balloon-html-content] .balloon,
        &:not([data-balloon-html-content]):before,
        &:after {
            @include opacity(1);
            pointer-events: auto;
        }
    }

    &[data-balloon-break] {
        &[data-balloon-html-content] .balloon,
        &:not([data-balloon-html-content]):before {
            white-space: normal;
        }
    }

    &[data-balloon-pos="up"] {
        &[data-balloon-html-content] .balloon,
        &:not([data-balloon-html-content]):before {
            bottom: 100%;
            left: 50%;
            margin-bottom: 5px + $balloon-arrow-height;
            @include transform(translate3d(-50%, 10px, 0));
            @include transform-origin(top);
        }

        &:after {
            bottom: 100%;
            left: 50%;
            margin-bottom: 5px;
            @include transform(translate3d(-50%, 10px, 0));
            @include transform-origin(top);
        }

        &:hover {
            &[data-balloon-html-content] .balloon,
            &:not([data-balloon-html-content]):before {
                @include transform(translate3d(-50%, 0, 0));
            }

            &:after {
                @include transform(translate3d(-50%, 0, 0));
            }
        }

    }

    &[data-balloon-pos='down'] {
        &[data-balloon-html-content] .balloon,
        &:not([data-balloon-html-content]):before {
            left: 50%;
            margin-top: 5px + $balloon-arrow-height;
            top: 100%;
            @include transform(translate3d(-50%, -10px, 0));
        }

        &:after {
            @include svg-arrow($balloon-bg, 'down');

            left: 50%;
            margin-top: 5px;
            top: 100%;
            @include transform(translate3d(-50%, -10px, 0));
        }

        &:hover {
            &[data-balloon-html-content] .balloon,
            &:not([data-balloon-html-content]):before {
                @include transform(translate3d(-50%, 0, 0));
            }

            &:after {
                @include transform(translate3d(-50%, 0, 0));
            }
        }
    }

    &[data-balloon-pos='left'] {
        &[data-balloon-html-content] .balloon,
        &:not([data-balloon-html-content]):before {
            margin-right: 5px + $balloon-arrow-height;
            right: 100%;
            top: 50%;
            @include transform(translate3d(10px, -50%, 0));
        }

        &:after {
            @include svg-arrow($balloon-bg, 'left');

            margin-right: 5px;
            right: 100%;
            top: 50%;
            @include transform(translate3d(10px, -50%, 0));
        }

        &:hover {
            &[data-balloon-html-content] .balloon,
            &:not([data-balloon-html-content]):before {
                @include transform(translate3d(0, -50%, 0));
            }

            &:after {
                @include transform(translate3d(0, -50%, 0));
            }
        }

    }

    &[data-balloon-pos='right'] {
        &[data-balloon-html-content] .balloon,
        &:not([data-balloon-html-content]):before {

            left: 100%;
            margin-left: 5px + $balloon-arrow-height;
            top: 50%;
            @include transform(translate3d(-10px, -50%, 0));
        }

        &:after {
            @include svg-arrow($balloon-bg, 'right');

            left: 100%;
            margin-left: 5px;
            top: 50%;
            @include transform(translate3d(-10px, -50%, 0));
        }

        &:hover {
            &[data-balloon-html-content] .balloon,
            &:not([data-balloon-html-content]):before {
                @include transform(translate3d(0, -50%, 0));
            }

            &:after {
                @include transform(translate3d(0, -50%, 0));
            }
        }
    }

    &[data-balloon-length='small'] {
        &[data-balloon-html-content] .balloon,
        &:not([data-balloon-html-content]):before {
            white-space: normal;
            width: 80px;
        }
    }

    &[data-balloon-length='medium'] {
        &[data-balloon-html-content] .balloon,
        &:not([data-balloon-html-content]):before {
            white-space: normal;
            width: 150px;
        }
    }

    &[data-balloon-length='large'] {
        &[data-balloon-html-content] .balloon,
        &:not([data-balloon-html-content]):before {
            white-space: normal;
            width: 260px;
        }
    }

    &[data-balloon-length='xlarge'] {
        &[data-balloon-html-content] .balloon,
        &:not([data-balloon-html-content]):before {
            white-space: normal;
            width: 380px;

            @media screen and (max-width: $small-screen-max-width) {
                white-space: normal;
                width: 90vw;
            }
        }
    }

    &[data-balloon-length='fit'] {
        &[data-balloon-html-content] .balloon,
        &:not([data-balloon-html-content]):before {
            white-space: normal;
            width: 100%;
        }
    }

    @media screen and (max-width: $small-screen-max-width) {
        &[data-balloon-smallscreen-overlay] {
            &[data-balloon-html-content] .balloon,
            &:not([data-balloon-html-content]):before,
            &:after {
                display: none;
            }
        }

    }
}


.balloon-overlay-scrim {
    background-color: $scrim-bg;
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    @include base-effects();

    .balloon-overlay {
        background: $balloon-bg;
        border-radius: $balloon-border-radius;
        color: $balloon-font-color;
        font-size: $balloon-base-size + 2px;
        max-width: 90vw;
        padding: $balloon-padding;
        position: absolute;
        top: 50%;
        left: 50%;
        width: 380px;
        @include transform(translate3d(-50%, -55%, 0));
        @include base-effects();

        h5 {
            font-size: $balloon-base-size + 5px;
            font-weight: 700;
            margin-bottom: 10px;
        }

        p {
            margin-bottom: 0;
        }
    }

    &.visible {
        @include opacity(1);

        .balloon-overlay {
            @include opacity(1);
            @include transform(translate3d(-50%, -50%, 0));
        }
    }
}

@media screen and (min-width: $small-screen-max-width + 1) {
    .balloon-overlay-scrim {
        display: none;
    }
}
